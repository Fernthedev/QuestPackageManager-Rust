name: Cargo Build

on:
    workflow_dispatch:
    push:
        branches: main
        paths-ignore:
            - .gitignore
            - Readme.md
    pull_request:
        branches: main

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                targetOS: [ubuntu-latest, windows-latest, macOS-latest]
                include:
                    - targetOS: ubuntu-latest
                      os: ubuntu-latest
                      cargo-arg: ""
                      file-name: "qpm-rust"
                      finalPrefix: ubuntu-latest
                      lib-name: ""
                      build-folder: "./target/debug/"

                    - targetOS: macOS-latest
                      os: macOS-latest
                      cargo-arg: ""
                      file-name: "qpm-rust"
                      finalPrefix: macOS-latest
                      lib-name: ""
                      build-folder: "./target/debug/"

                    - targetOS: windows-latest
                      os: windows-latest
                      cargo-arg: ""
                      file-name: "qpm-rust.exe"
                      lib-name: ""
                      finalPrefix: windows-latest
                      build-folder: "./target/debug/"
        steps:
            - uses: actions/checkout@v2
              name: Checkout
              with:
                  submodules: true
                  lfs: true

            - uses: actions-rs/toolchain@v1
              with:
                toolchain: nightly

            - uses: actions/cache@v2
              with:
                path: |
                  ~/.cargo/bin/
                  ~/.cargo/registry/index/
                  ~/.cargo/registry/cache/
                  ~/.cargo/git/db/
                  target/
                key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

            - name: Cargo build
              run: |
                  cargo +nightly ${{matrix.cargo-arg}} build --verbose

#            - name: Rename and move files
#              run: |
#                ls ./target/release/
#                ls ${{ matrix.build-folder }}
#                mv "${{ matrix.build-folder }}/${{ matrix.file-name }}" "./${{ matrix.finalPrefix }}-${{ matrix.file-name }}"
#                echo Done
#              shell: bash 
                
            - name: Upload executable
              uses: actions/upload-artifact@v2
              with:
                name: ${{matrix.finalPrefix}}-${{matrix.file-name}}
                path: ${{matrix.build-folder}}${{matrix.file-name}}
                # if not found error obviously
                if-no-files-found: error
